// Simple Inventory, for SugarCube 2, by Chapel
// v3.0.0-pa1, 2021-04-15, a8143dde7ea183941d930bf7e4eb8c9025eaa6df
;(()=>{"use strict";const t={description:"",handler:null,displayName:"",consumable:!0,unique:!1,permanent:!1},e=new Map;class n{constructor(e="",n=clone(t),i=[]){if(!e||"string"!=typeof e)throw new Error("invalid item ID");if("object"!=typeof n)throw new Error("invalid item definition");Object.assign(this,Object.assign(t,n)),this.id=e,this.tags=i instanceof Array?i:"string"==typeof i?[i]:[]}static is(t){return t instanceof n}static add(t,i,s){const r=new n(t,i,s);return e.set(t,r),r}static get(t){return e.get(t)}static has(t){return e.has(t)}static get list(){return e}get name(){return this.displayName||this.id}set name(t){this.displayName=t}use(){return"string"==typeof this.handler?$.wiki(this.handler):"function"==typeof this.handler&&this.handler(this),this}inspect(){Dialog.setup(this.name,"simple-inventory item-description"),Dialog.wiki(this.description),Dialog.open()}}Macro.add(["item","consumable"],{tags:["description","tags","unique","permanent"],handler(){let t,e,i,s,r=null,a=!1,o=!1,u=!1;if(State.length>0)return this.error("items must be defined in `StoryInit` or story JavaScript!");if(!this.args[0]||"string"!=typeof this.args[0]||!this.args[0].trim())return this.error("invalid item ID");if(t=this.args[0].trim(),"consumable"===this.name&&(r=this.payload[0].contents||null,a=!0),this.args[1]&&(e=this.args[1]),this.payload.length>1){const t=this.payload.find((t=>"description"===t.name)),e=this.payload.find((t=>"tags"===t.name)),n=this.payload.find((t=>"unique"===t.name)),r=this.payload.find((t=>"permanent"===t.name));t&&(i=t.contents),e&&(s=e.args.flat(1/0)),n&&(o=!0),r&&(u=!0)}n.add(t,{displayName:e||"",description:i||"",handler:r,consumable:a,unique:o,permanent:u},s)}}),setup.Item=n,window.Item=window.Item||n})(),(()=>{"use strict";function t(t){return Item.has(t)&&Item.get(t).permanent}class e{constructor(t={},e=[]){this.data=clone(t),this.tags=e instanceof Array?e:"string"==typeof e?[e]:[]}static change(n,i,s=1,r=!1){if(0!==s){if(n instanceof e&&(n=n.data),"object"!=typeof n){if(n)throw new TypeError("cannot access inventory data");n={}}if(!(a=i)||"string"!=typeof a||!a.trim())throw new TypeError("invalid item name/id");var a;if("number"==typeof s&&!Number.isNaN(s)&&Number.isInteger(s)||(s=1),r&&(s*=-1),s>0){if(Object.keys(n).includes(i)&&function(t){return Item.has(t)&&Item.get(t).unique}(i))return;Object.keys(n).includes(i)||(n[i]=0),n[i]+=s}else{if(t(i))return;Object.keys(n).includes(i)&&"number"==typeof n[i]&&(n[i]+=s),n[i]<=0&&delete n[i]}return n}}static itemset(t={}){if("object"!=typeof t)return{};const e={};return Object.keys(t).forEach((n=>{"number"==typeof t[n]&&Number.isInteger(t[n])&&0!==t[n]&&(e[n]=t[n])})),e}static is(t){return t instanceof e}static emit(t,e,n=null,i){$(document).trigger({type:":inventory-"+t+".simple-inventory",inventory:e,target:n,item:"use"===t&&i?i:void 0})}static add(t,n){return new e(t,n)}emit(t,n=null,i){return e.emit(t,this,n,i),this}get array(){const t=[];return Object.keys(this.data).forEach((e=>{if(t.push(e),this.data[e]>1)for(var n=1;n<this.data[e];n++)t.push(e)})),t}get list(){return Object.keys(this.data)}get length(){return this.array.length}get uniqueLength(){return this.list.length}get table(){return this.data}count(t){return t?this.data[t]||0:this.length}has(t,e=1){return this.data[t]>=e}hasAll(){const t=this;return[].slice.call(arguments).flat(1/0).every((e=>t.has(e)))}hasAny(){const t=this;return[].slice.call(arguments).flat(1/0).some((e=>t.has(e)))}pickup(t,n){return e.change(this,t,n)&&this.emit("update"),this}pickUp(t,e){return this.pickUp(t,e)}drop(t,n){return e.change(this,t,n,!0)&&this.emit("update"),this}transfer(t,n,i){if(!e.is(t))throw new TypeError("target inventory is not an inventory instance");if(this.has(n)){const s=e.change(this,n,i,!0),r=e.change(t,n,i);(s||r)&&this.emit("update")}return this}iterate(t){return"function"!=typeof t||this.list.forEach((e=>{t(e,this.data[e])})),this}merge(t){const n=this,i=e.itemset(t);Object.keys(i).forEach((t=>{e.change(n,t,i[t])}))}use(t){if(!Item.has(t))return;const n=Item.get(t);return n.use(),n.consumable&&(e.change(this,t,1,!0),this.emit("update")),this.emit("use",null,n),this}inspectLink(t,e="Inspect",n=!1){return $(document.createElement(n?"button":"a")).addClass("inspect-link","simple-inventory").wiki(e).ariaClick((()=>{Item.get(t).inspect()}))}useLink(t,e="Use",n=!1){const i=this;return $(document.createElement(n?"button":"a")).addClass("use-link","simple-inventory").wiki(e).ariaClick((()=>{i.use(t)}))}dropLink(t,n,i=!1,s=null){const r=this;return $(document.createElement(i?"button":"a")).addClass("drop-link","simple-inventory").wiki(n||s?"Give":"Drop").ariaClick((()=>{s&&e.is(s)?r.transfer(s,t):r.drop(t)}))}itemCount(t,e="&nbsp;&times;&nbsp;",n="&nbsp;"){return $(document.createElement("span")).addClass("item-count","simple-inventory").append(""+e+(this.count(t)||0)+n)}displayInventoryList(n={description:!0,use:!0,transfer:null,drop:!0,dropActionText:""}){const i=this,s=$(document.createElement("ul")).addClass("simple-inventory-list"),r=this.list.map((s=>{const r=[];return n.description&&Item.has(s)&&Item.get(s).description?r.push(i.inspectLink(s,Item.has(s)?Item.get(s).name:s)):r.push($(document.createElement("span")).append(Item.has(s)?Item.get(s).name:s).addClass("item-name")),r.push(i.itemCount(s)),n.use&&Item.has(s)&&Item.get(s).handler&&r.push(i.useLink(s)),(n.transfer&&e.is(n.transfer)||n.drop)&&!t(s)&&r(i.dropLink(s,"",n.dropActionText,n.target||null)),$(document.createElement("li")).append(r).addClass("simple-inventory-listing")}));return s.append(r),s}interface(t={},e=null){const n=$(document.createElement("div")).addClass("simple-inventory-wrapper");let i;return n.append(this.displayInventoryList(t)),$(document).on(":inventory-update.simple-inventory.gui-built-in",(()=>{n.length?n.empty().append(this.displayInventoryList(t)):$(document).off(":inventory-update.simple-inventory.gui-built-in")})),e&&e instanceof $?i=e:e&&(i=$(e)),i&&n.appendTo(i),n}clone(){return new e(this.data||{},this.tags||[])}toJSON(){return JSON.reviveWrapper("new setup.Inventory("+JSON.stringify(this.data)+", "+JSON.stringify(this.tags)+")")}}function n(t){return t&&"string"==typeof t&&t.length>2&&("$"===t[0]||"_"===t[0])}function i(t){if(n(t)&&(t=State.getVar(t)),e.is(t))return t}Macro.add("newinv",{handler(){if(!n(this.args[0]))return this.error("argument must be the quoted name of a story variable or temporary variable!");State.setVar(this.args[0],new e({},this.args.flat(1/0).slice(1)))}}),Macro.add("pickup",{handler(){const t=i(this.args[0]);if(!t)return this.error("first argument must be a valid inventory!");t.pickUp(this.args[1],this.args[2])}}),Macro.add("drop",{handler(){const t=i(this.args[0]);if(!t)return this.error("first argument must be a valid inventory!");t.drop(this.args[1],this.args[2])}}),Macro.add("transfer",{handler(){const t=i(this.args[0]);if(!t)return this.error("first argument must be a valid inventory!");const e=i(this.args[1]);if(!e)return this.error("second argument must be a valid inventory!");t.transfer(e,this.args[2],this.args[3])}}),Macro.add(["inv","take","give"],{handler(){let t=null;const e=i(this.args[0]);if(!e)return this.error("first argument must be a valid inventory!");this.args[1]&&(t=i(this.args[1]));const n={description:this.args.includesAny("inspect","description"),use:this.args.includes("use"),transfer:t,drop:this.args.includes("drop"),dropActionText:"inv"===this.name?"Drop":this.name.toUpperFirst()};e.interface(n,$(this.output))}}),setup.Inventory=e,window.Inventory=window.Inventory||e})();
// End Simple Inventory